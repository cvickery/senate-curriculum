<?php
//  .../Proposal_Editor/scripts/select_course.php
/*  The Course/Proposal selection module.
 *
 *  Part I:   Process form data, if any.
 *  Part II:  Generate form(s)
 *
 *  There are three forms on this page for selecting a proposal:
 *
 *    select_one_course:  Used to disambiguate when cf_catalog returns multiple hits
 *                        for a course. This form is displayed when lookup_course()
 *                        returns more than one course.
 *
 *    The following two forms are always displayed, even when the first one is shown:
 *
 *    select_proposal:    User selects an existing proposal from a list of the ones s/he
 *                        has open.
 *    create_proposal:    User enters a course string and selects the proposal type.
 *
 *  The user arrives here after submitting one, the other, or neither of these forms.
 *  In the last case, the user might or might not already have selected a proposal.
 *
 *  Indicators:
 *
 *    If form is select_proposal:
 *      POST[use_proposal]    Existing proposal chosen to work with
 *    If form is create_proposal:
 *      POST[course_str]      User is submitting a new discipline-number pair, which
 *                            must be accompanied by ...
 *      POST[proposal_type]   ... the type of proposal
 *
 *    While processing POST[course_str], possibly set:
 *      SESSION[course_array] List of courses returned from course_str lookup
 *      This triggers generation of the select_one_course form.
 *
 *    If form is select_one_course:
 *      POST[course_index]    ... the user selects one to use.
 *      SESSION[course_array] The list of courses generated by previoius processing of
 *                            POST[course_str]
 *
 *    Once form processing is complete, the following might or might not be set:
 *
 *      SESSION[proposal]     Serialized Proposal user is working on. Justifications,
 *                            cur_catalog, and new catalog are unserialized within the
 *                            object.
 *      SESSION[cur_catalog]  Serialized Course object from the current proposal.
 *      SESSION[new_catalog]  Deep copy of previous item, for editing; used only for Course
 *                            proposals, not Designation proposals.
 *      $proposal             Global copy of unserialized version of the corresponding
 *                            SESSION variable.
 *
 *      And the following session variables will be cleared:
 *        SESSION[course_array]
 *
 *      SESSION[person] will continue to identify the currently logged-in user, and the
 *      global variable $person will contain the corresponding information.
 */

//  Precondition: a user is logged in.
  assert('isset($_SESSION[person])');
  $person = unserialize($_SESSION[person]);

//  Module variables
//  -------------------------------------------------------------------------------------
  $error_msg = '';  // Set while processing form data. Displayed when generating select
                    // proposal form.
  $proposal_id = '- no proposal -';

  //  Part I: Process Form Data
  //  ===================================================================================

  if ($form_name === select_proposal)
  {
    //  User has selected a proposal from a list.
    assert('!isset($_POST[course_str]) && !isset($_POST[proposal_type]) && ' .
           'isset($_POST[use_proposal])');
    $proposal_id = sanitize($_POST[use_proposal]);
    if ($proposal_id != 0)
    {
      //  User submitted the select_proposal form and did not select "None of the above"
      $query = "SELECT * FROM proposals WHERE id = '$proposal_id'";
      $result = pg_query($curric_db, $query)
         or die ( "Unable to access proposal #$proposal_id; " .
                  basename(__FILE__) . ' ' .  __LINE__);
      if (1 !== pg_num_rows($result)) throw new Exception("$proposal_id not found");
      $row                      = pg_fetch_assoc($result);
      $type_abbr                = $proposal_type_id2abbr[$row['type_id']];
      $proposal                 = new Proposal( $row['discipline'],
                                                $row['course_number'],
                                                $type_abbr);
      $cur_catalog              = unserialize($row['cur_catalog']);
      $new_catalog              = unserialize($row['new_catalog']);
      $justifications           = unserialize($row['justifications']);
      $proposal->cur_catalog    = new Course($cur_catalog);
      $proposal->new_catalog    = new Course($new_catalog);
      $proposal->justifications = $justifications;
      $_SESSION[proposal]       = serialize($proposal);
      $_SESSION[cur_catalog]    = serialize($proposal->cur_catalog);
      $_SESSION[new_catalog]    = serialize($proposal->new_catalog);
    }
    else
    {
      //  User selected "none of the above" or somehow gave an invalid id; make no
      //  proposal selected.
      $proposal = null;
      unset($_SESSION[proposal]);
      unset($_SESSION[cur_catalog]);
      unset($_SESSION[new_catalog]);
    }
  }
  if ($form_name === create_proposal)
  {
    assert('isset($_POST[course_str]) && isset($_POST[proposal_type]) && ' .
           '!isset($_POST[use_proposal])');
    $proposal_course_str  = sanitize($_POST[course_str]);
    $proposal_type        = sanitize($_POST[proposal_type]);
    $proposal_type_name   = $proposal_type_abbr2name[$proposal_type];

    //  See if course_str and proposal_type can be used
    //  -------------------------------------------------------------------------------
    /*  Maybe they are intrinsically wrong, maybe they cause an exception when trying to
     *  create a Proposal from them, or maybe they just don't have anything meaningful
     *  to tell us and should be ignored at this time.  Or maybe they're okay.
     */
    if (strlen($proposal_course_str) > 3 && $proposal_type !== '')
    {
      //  select_course.js has already forced canonical form for discipline and course
      //  number, ... unless JavaScript is disabled.
      preg_match( '/^\s*([a-z]+)\s*-?\s*(\d+[hw]?)\s*$/i',
                  $proposal_course_str,
                  $matches);
      if (count($matches) == 3)
      {
        $discipline     = strtoupper($matches[1]);
        $course_number  = strtoupper($matches[2]);
        $course_records = lookup_course($discipline, $course_number);
        $num_courses    = count($course_records);
        //  Check result of the CF catalog lookup
        if ($num_courses === 0)
        {
          //  The proposal is for a course that does not exist in CUNYfirst.
          //  Either this must be a NEW or FIX course proposal, or there
          //  has to be one open.
          if (array_key_exists($discipline, $disciplines))
          {
            //  Check for existing Course proposals for this course
            $query = <<<EOD
  SELECT proposals.id,
         proposals.submitted_date "submitted",
         proposal_types.abbr      "type",
         proposal_classes.abbr    "class",
         submitter_name           "name"
    FROM proposals, proposal_types, proposal_classes
   WHERE class_id   = proposal_classes.id
     AND type_id    = proposal_types.id
     AND class_id   = (SELECT id FROM proposal_classes WHERE abbr = 'Course')
     AND discipline     = '$discipline'
     AND course_number  = '$course_number'
     AND closed_date    IS NULL
EOD;
            $result = pg_query($curric_db, $query) or die('Unable to access proposals '
                . basename(__FILE__) . ' ' . __LINE__ . "\n$query");
            $num_course_proposals = pg_num_rows($result);
            $proposal_class =
              $proposal_classes[$proposal_type_abbr2class_id[$proposal_type]]['abbr'];
            $have_course_proposal = $proposal_class === 'Course';
            while ($row = pg_fetch_assoc($result))
            {
              if ($row['type'] === $proposal_type)
              {
                //  There is already an open proposal of this type for this course. Who
                //  done it?
                $who_done_it = 'you';
                $verb = 'have';
                $reminder = '';
                if ($row['submitted'] === null)
                {
                  $reminder =
                      " <span class='warning'>Don’t forget to submit it.</span>";
                }
                if (strTolower($row['submitter_email']) !== strTolower($person->email))
                {
                  $who_done_it = $row['name'];
                  $verb = 'has';
                  if ($row['submitted'] === null)
                  {
                    $reminder = <<<EOD
  <span class='warning'>Note: $who_done_it has not submitted the proposal yet.</span>
EOD;
                  }

                }
                $error_msg = <<<EOD
    <p class='error'>
      Unable to create proposal:
      it would duplicate a $proposal_type_name proposal for $discipline
      $course_number that $who_done_it $verb already created.
    </p>
EOD;
              }
              if ($row['class'] === 'Course')
              {
                $have_course_proposal = true;
              }
            }
            if (! $have_course_proposal)
            {
              $error_msg = <<<EOD
  <p class='error'>
    Unable to create proposal:
    $discipline $course_number is not in the CUNYfirst course catalog. You need to start a
    separate proposal to create the course or to fix the CUNYfirst catalog data before you
    can start a designation proposal for it.
  </p>
EOD;
            }
            if ('' === $error_msg)
            {
              try
              {
                //  Create the proposal
                $cur_catalog = new Course();
                $cur_catalog->set_discipline($discipline);
                $cur_catalog->set_number($course_number);  // Also sets is_undergraduate
                $_SESSION[cur_catalog]  = serialize($cur_catalog);
                $_SESSION[new_catalog]  = serialize($cur_catalog);

                $proposal = new Proposal($discipline, $course_number, $proposal_type);
                $proposal->cur_catalog  = $cur_catalog;
                $proposal->new_catalog  = $cur_catalog;
                $proposal->save();
                $_SESSION[proposal]     = serialize($proposal);
              }
              catch (Exception $e)
              {
                $error_msg = "<p class='error'>" . $e->getMessage() . "</p>\n";
              }
            }
          }
          else
          {
            //  Invalid discipline: should not occur because JavaScript is supposed to
            //  force it to be valid.
            $error_msg = "<p class='error'>“$discipline” is not a recognized " .
              "discipline code.</p>";
          }
        }
        else if ($num_courses === 1)
        {
          //  User submitted a course string that matches one course in CF
          if ($proposal_type === 'NEW-U' || $proposal_type === 'NEW-G')
          {
            $error_msg = <<<EOD
  <p class='error'>
    $discipline $course_number already exists, so it cannot be proposed as a new course.
    You could create a proposal either to revise it or to request the Registrar to fix the
    CUNYfirst data for it.
  </p>
EOD;
          }
          else
          {
            //  Create the proposal
            try
            {
              $proposal = null;
              unset($_SESSION[proposal]);
              unset($_SESSION[cur_catalog]);
              unset($_SESSION[new_catalog]);
              $proposal = new Proposal($discipline, $course_number, $proposal_type);
              $cur_catalog = $course_records[0];
              $_SESSION[cur_catalog]  = serialize($cur_catalog);
              $_SESSION[new_catalog]  = serialize($cur_catalog);
              $proposal->cur_catalog  = $cur_catalog;
              $proposal->new_catalog  = $cur_catalog;
              $proposal->save();
              $_SESSION[proposal]     = serialize($proposal);
            }
            catch (Exception $e)
            {
              $error_msg = "<p class='error'>" . $e->getMessage() . "</p>\n";
            }
          }
        }
        else
        {
          //  User submitted a course string that matches multiple courses in CF.
          //  Since lookup_course() has merged multiple components into a single Course,
          //  this is an error that needs to be fixed.  Generate a proposal to do so
          //  ...
          $internal_proposal = new Proposal($discipline, $course_number, 'FIX');
          $internal_proposal->cur_catalog     = $course_records[0]; // arbitrary
          $internal_proposal->new_catalog     = $course_records[0];
          $internal_proposal->submitter_email = $webmaster_email;
          $internal_proposal->submitter_name  = 'Webmaster';
          $internal_proposal->justifications->FIX = <<<EOD
  Multiple course records for $discipline $course_number encountered by {$person->email}.
EOD;
          $internal_proposal->save(); // sets id field
          $id = $internal_proposal->id;
          $query = "UPDATE proposals SET submitted_date = now() WHERE id = $id";
          $result = pg_query($curric_db, $query) or die('Unable to submit: ' .
              basename(__FILE__) . ' ' . __LINE__ . ":\n$query");

          //  ... and give the user a way to deal with the situation
          $suffix = 's';
          $pronoun = 'them';
          if ($num_courses === 2)
          {
            $suffix = '';
            $pronoun = 'it';
          }
          echo <<<EOD
        <!--
          $discipline $course_number appears more than once in the CUNYfirst course
          catalog.
          -->
        <h2 class='warning'>
          $discipline $course_number appears more than once in the CUNYfirst course
          catalog.
        </h2>
        <div>
          <div class='instructions'>
            <p>
              This may be a problem with the CUNYfirst catalog. You may select one of
              the courses below to work with, and we will notify the Registrar to look
              at the other one$suffix and to to deactivate $pronoun if appropriate.
            </p>
            <p>
              Alternatively, this course might have multiple components, such as Lecture
              and Recitation sections, which this web page is not able to handle yet.
              In this case, you may select any one from the list below to work with.
            </p>
            <p>
              You may select “None of the these,” to work with another course, instead.
            </p>
          </div>

          <form action="." method="post">
            <fieldset><legend>Select One</legend>
            <input type='hidden' name='form-name' value='select-one-course' />
            <input type='hidden' name='proposal_type' value='$proposal_type' />
EOD;

          //  Save the array of Course objects
          $_SESSION[course_array] = serialize($course_records);
          //  Display catalog entry for each one, with a button for selecting it
          for ($index = 0; $index < count($course_records); $index++)
          {
            echo  "<fieldset>" .
                    $course_records[$index]->toHTML(without_approvals, with_radio, $index) .
                  "</fieldset>";
          }

          //  Provide a "none of the above" alternative
          //    Gives index value of -1
          $conjunction = (count($course_records) === 2) ? 'Neither' : 'None';
          echo <<<EOD

              <fieldset>
                <input  type='radio'
                        id='no-course'
                        name='course-index'
                        checked='checked' value='-1' />
                <label for='no-course'>$conjunction of these.</label>
              </fieldset>
              <div><button type='submit'>Select From Above</button></div>
            </fieldset>
          </form>
        </div>

EOD;
        }
      }
      else
      {
        $error_msg = <<<EOD
        <p class='error'>
          “{$proposal_course_str}” is not a valid discipline-course number pair
        </p>
EOD;
      }
    }
    //  Finger slips and phishing trips get you here
  }

  //  Maybe user previously selected a course that (erroneously) occurs multiple times in
  //  CUNYfirst.
  if ($form_name === select_one_course)
  {
    assert('isset($_POST[course_index] && isset($_POST[proposal_type]');
    $course_index             = sanitize($_POST[course_index]);
    $proposal_type            = sanitize($_POST[proposal_type]);
    if (is_numeric($course_index) && $course_index > -1)
    {
      $course_records         = unserialize($_SESSION[course_array]);
      assert('$course_index < count($course_records)');
      $cur_catalog            = $course_records[$course_index];
      $_SESSION[cur_catalog]  = serialize($cur_catalog);
      $_SESSION[new_catalog]  = serialize($cur_catalog);

      $discipline             = $cur_catalog->discipline;
      $course_number          = $cur_catalog->course_number;
      try
      {
        $proposal = null;
        $proposal = new Proposal($discipline, $course_number, $proposal_type);
        $proposal->cur_catalog  = $cur_catalog;
        $proposal->new_catalog  = $cur_catalog;
        $_SESSION[proposal]     = serialize($proposal);
      }
      catch (Exception $e)
      {
        $error_msg = "<p class='error'>" . $e->getMessage() . "</p>\n";
      }
    }

    //  Whether user selected a course to work with or 'none of the above', clean up the
    //  list of possible courses.
    unset($_SESSION[course_array]);
  }

  //  Select or Create Proposal
  //  -----------------------------------------------------------------------------------
  /*  Proposal controls are displayed whether a proposal has been selected or not.  But
   *  the setup depends on whether the user has a proposal selected and/or a set of
   *  previously-selected proposals.
 */
$section_status = <<<EOD
Click here to create a new proposal or to select an existing one to edit or submit.
EOD;
  $proposal_id    = 0; // none assumed
  if (isset($_SESSION[proposal]))
  {
    $proposal             = unserialize($_SESSION[proposal]);
    $proposal_id          = $proposal->id;
    $proposal_type        = $proposal_type_id2name[$proposal->type_id];
    $proposal_course_str  = $proposal->discipline . ' ' . $proposal->course_number;
    $proposal_type        = $proposal_type_id2name[$proposal->type_id];
    $class_id             = $proposal_type_id2class_id[$proposal->type_id];
    $proposal_class       = $proposal_classes[$class_id]['abbr'];
    $cur_catalog          = unserialize($_SESSION[cur_catalog]);
    $new_catalog          = unserialize($_SESSION[new_catalog]);

    $section_status       = <<<EOD
 #$proposal_id: $proposal_course_str [$proposal_type]

EOD;
  }
  echo <<<EOD
  <!--
    Course proposal: $section_status
    -->
  <h2 id='select-proposal-section'>Course proposal: $section_status</h2>
  <div>
    <fieldset><legend>Select or Create a Proposal</legend>
      <div class='instructions'>
        <p>
          You can create a new proposal, continue working on a proposal you started
          earlier, or switch to a different proposal.
        </p>
      </div>
      <fieldset><legend>Select a Proposal</legend>
        <div class='instructions'>
          <ul>

EOD;

  //  Get (possibly empty) list of currently open proposals to select from
  $person_email = $person->email;
  $query = <<<EOD
SELECT *
  FROM proposals
 WHERE lower(submitter_email) = lower('$person_email')
   AND closed_date IS NULL
   ORDER BY id
EOD;
  $result = pg_query($curric_db, $query) or die ('Unable to access proposals: ' .
      basename(__FILE__) . ' line ' . __LINE__);
  $num_proposals = pg_num_rows($result);
  switch ($num_proposals)
  {
    case 0:
      echo <<<EOD
            <li>
              <p>
                You have no open proposals to select from. Use the “Create a Proposal”
                option to create one.
              </p>
              <p>
                Later, you will be able to select from among your open proposals here.
              </p>
            </li>
          </ul>
        </div>
      </fieldset>

EOD;
      break;
    case 1:
      echo <<<EOD
        <li>
          Select your currently open proposal here, - OR - use the “Create a Proposal”
          option to start a new one.
        </li>
EOD;
      break;
    default:
      echo <<<EOD
        <li>
          Select one of your currently open proposals here, - OR - use the “Create a
          Proposal” option to start a new one.
        </li>
EOD;
      break;
  }
  if ($num_proposals > 0)
  {
    echo <<<EOD
            <li>
              In the table, you can hover over the “type” column for explanations of
              abbreviations.
            </li>
            <li>
              The links in the ”proposal” and “syllabus” columns will open a new browser tab
              or window to display those documents.
            </li>
            <li>
              You cannot delete a proposal while you are editing it. You can use the “None
              of the above” option to deselect the one you are editing if you decide to
              delete it.
            </li>
          </ul>
        </div>
        <form action='.' method='post'>
          <input type='hidden' name='form-name' value='select-proposal' />
          <table id='proposal-selection-table' class='selection-table'>
            <tr>
              <th>Select<br/>Proposal</th>
              <th>Proposal<br/>ID</th>
              <th>Date<br/>Created</th>
              <th>Date<br/>Saved</th>
              <th>Date<br/>Submitted</th>
              <th>Proposal<br/>Type</th>
              <th>Course</th>
              <th>Syllabus</th>
              <th>Delete<br/>Proposal</th>
            </tr>
EOD;
    while ($row = pg_fetch_assoc($result))
    {
      $id             = $row['id'];
      $row_class      = '';
      $disable_radio  = '';
      $delete_button  = <<<EOD
<td class='delete-proposal'>
  <button type='button' class='warning' id='delete-$id'>×</button>
</td>
EOD;
      if ($id == $proposal_id)
      {
        $row_class = " class='selected-row current-proposal-row' title='current proposal'";
        $delete_button  = <<<EOD
<td>
  <span title='Cannot delete proposal when it is selected'>N/A</span>
</td>
EOD;
        $radio_button  = "Currently Selected";
      }
      else
      {
        $radio_button = "<input type='radio' name='use_proposal' value='$id' />";
      }
      //  On dates and times: in the proposals table, the opened_date and closed_date
      //  fields are dates, but the saved_date and submitted_date fields are timestamps.
      //  For the latter we want to compare timestamps, but display dates.
      $opened          = $row['opened_date'];
      $submitted_time  = '';
      $submitted_date  = 'Not yet';
      if ($row['submitted_date'])
      {
        $submitted_time = $row['submitted_date'];
        $submitted_date = substr($submitted_time, 0, 10);
        $delete_button = <<<EOD
<td>
  <span title='Cannot delete submitted proposals'>N/A</span>
</td>
EOD;
      }
      $saved_time = '';
      $saved_date = 'Not yet';
      if ($row['saved_date'])
      {
        $saved_time = $row['saved_date'];
        $saved_date = substr($saved_time, 0, 10);
      }
      if ( $saved_time && $submitted_time && ($saved_time > $submitted_time) )
       {
         $saved_date = "<span class='warning' title='Updated after submitting'>" .
                          "$saved_date" .
                       "</span>";
       }
      $type_id      = $row['type_id'];
      $type_abbr    = $proposal_type_id2abbr[$type_id];
      $type_name    = $proposal_type_id2name[$type_id];
      $this_course  = $row['discipline'] . ' ' . $row['course_number'];
      $base_dir     = dirname(getcwd());
      $href = "http://senate.qc.cuny.edu/$base_dir/Proposals?id=$id";
      //  check for syllabus
      $current_syllabus = get_current_syllabus($this_course);
      if ($current_syllabus)
      {
        $date = date('Y-m-d', filemtime($current_syllabus));
        $current_syllabus_link =
            "<a href='$current_syllabus' target='_blank'>$date</a>";
      }
      else
      {
        $current_syllabus_link = "<span class='warning'>None</span>";
      }
      echo <<<EOD
            <tr$row_class>
              <td>$radio_button</td>
              <td>$id</td>
              <td>$opened</td>
              <td>$saved_date</td>
              <td>$submitted_date</td>
              <td title='$type_name'>$type_abbr</td>
              <td>$this_course</td>
              <td>$current_syllabus_link</td>
              $delete_button
            </tr>
EOD;
    }
    //  None of the above option
    echo <<<EOD
            <tr>
              <td>
                <input  type='radio'
                        id='no-proposal'
                        name='use_proposal'
                        value='0'
                        />
              </td>
              <td colspan='6'><label for='no-proposal'>None of the above</label></td>
            </tr>
          </table>
          <button type='submit'
                  id='select-proposal'
                  class='submit-button'
                  disabled='disabled'>
            Select a Proposal
          </button>
          <span class='unsaved-edits error'>
            Changes to proposal No. $proposal_id, will be
            lost if you select another proposal now.
          </span>
        </form>
      </fieldset>

      <p id='select-copula'>- OR -</p>

EOD;
  }

  //  The create-proposal form
  //  -----------------------------------------------------------------------------------
  $prompt_option = select_proposal_type;  // Atomized string for unselected proposal type
  echo <<<EOD

      <!--
        Create Proposal
        -->
      <form action='.' method='post'>
        <input type='hidden' name='form-name' value='create-proposal' />
        <fieldset id='course-and-proposal-entry'><legend>Create a Proposal</legend>
          <ul class='instructions'>
            <li>
              Enter the discipline code and number (<em>e.g., ENGL 101</em>) for the
              course you want to work with, and select a proposal type from the list.
            </li>
              <li class='warning'>
                <p>
                  We are currently accepting proposals for new or revised courses and
                  proposals for CUNY Core (Pathways) and QC College Option designations,
                  but not PLAS or Overlay (W/Q) proposals.
                </p>
                <p>
                  Furthermore, the guidelines for EC-2 courses are still in flux, and may
                  change as the Writing Subcommittee develops its guidelines.  See the <a
                  href='../Model_Proposals/#EC'>Model Proposals page</a> for more information
                  on EC.
                </p>
            </li>
          </ul>
          <div class='course-str-div'>
            <label for='course-str-p'>Course:</label>
            <input  type='text'
                    name='course_str'
                    id='course-str-p'
                    class='course-str'
                    value='' />
            <span class='course-str-msg warning'> </span>
            <ul class='discipline-suggestion-list'></ul>
          </div>
          <div>
            <label for='proposal-type'>Proposal Type:</label>
            <select name='proposal_type' id='proposal-type'>

                <option value=''>$prompt_option</option>
                $proposal_type_options
            </select>
          </div>
          $error_msg
          <button type='submit'
                  id='create-proposal'
                  class='submit-button'
                  disabled='disabled'>
            Create Proposal
          </button>
          <span class='unsaved-edits error'>
            Changes to proposal No. $proposal_id, will be
            lost if you create another proposal now.
          </span>
        </fieldset>
      </form>
    </fieldset>
  </div>

EOD;

?>
